package com.e;

import android.content.Context;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.SparseArray;
import com.amap.api.location.AMapLocation;
import com.autonavi.aps.amapapi.model.AmapLoc;
import com.e.dc.a;
import com.fasterxml.jackson.core.util.MinimalPrettyPrinter;
import dji.pilot.usercenter.mode.n;
import dji.pilot2.multimoment.activity.DJIMultiMomentFineActivity;
import java.util.HashMap;
import java.util.Locale;
import org.json.JSONObject;

public class bc {
    public static String a = null;
    public static String b = null;
    public static String c = null;
    public static String d = "";
    public static String e = "";
    public static String f = "";
    public static String g = "";
    public static String h = "";
    public static int i = 30000;
    public static String j = null;
    public static String k = null;
    public static int l = 20;
    public static boolean m = true;
    public static int n = 1;
    static String o;
    static HashMap<String, String> p;
    public static final SparseArray<String> q = new SparseArray();
    public static boolean r = false;
    private static String s = "http://apilocate.amap.com/mobile/binary";
    private static String[] t = new String[]{"com.amap.api.location", "com.loc"};
    private static String u = "11B;11I;001;002;11H;11E;11K;11C;11F;11G";

    static {
        q.append(0, "UNKWN");
        q.append(1, "GPRS");
        q.append(2, "EDGE");
        q.append(3, "UMTS");
        q.append(4, "CDMA");
        q.append(5, "EVDO_0");
        q.append(6, "EVDO_A");
        q.append(7, "1xRTT");
        q.append(8, "HSDPA");
        q.append(9, "HSUPA");
        q.append(10, "HSPA");
        q.append(11, "IDEN");
        q.append(12, "EVDO_B");
        q.append(13, "LTE");
        q.append(14, "EHRPD");
        q.append(15, "HSPAP");
    }

    public static AMapLocation a(AmapLoc amapLoc) {
        if (amapLoc == null) {
            return null;
        }
        int errorCode = amapLoc.getErrorCode();
        AMapLocation aMapLocation = new AMapLocation("");
        aMapLocation.setLatitude(amapLoc.getLat());
        aMapLocation.setLongitude(amapLoc.getLon());
        aMapLocation.setAccuracy(amapLoc.getAccuracy());
        if (errorCode == 0) {
            aMapLocation.setTime(amapLoc.getTime());
        } else {
            aMapLocation.setTime(System.currentTimeMillis());
        }
        aMapLocation.setCountry(amapLoc.getCountry());
        aMapLocation.setRoad(amapLoc.getRoad());
        aMapLocation.setErrorCode(errorCode);
        aMapLocation.setErrorInfo(amapLoc.getErrorInfo());
        aMapLocation.setLocationDetail(amapLoc.getLocationDetail());
        aMapLocation.setLocationType(amapLoc.getLocationType());
        aMapLocation.setPoiName(amapLoc.getPoiname());
        aMapLocation.setStreet(amapLoc.getStreet());
        aMapLocation.setNumber(amapLoc.getNumber());
        aMapLocation.setOffset(amapLoc.isOffset());
        Bundle bundle = new Bundle();
        bundle.putString("citycode", amapLoc.getCitycode());
        bundle.putString("desc", amapLoc.getDesc());
        bundle.putString("adcode", amapLoc.getAdcode());
        aMapLocation.setExtras(bundle);
        String citycode = amapLoc.getCitycode();
        String desc = amapLoc.getDesc();
        String adcode = amapLoc.getAdcode();
        aMapLocation.setCityCode(citycode);
        aMapLocation.setAdCode(adcode);
        if (adcode == null || adcode.trim().length() <= 0) {
            aMapLocation.setAddress(desc);
        } else {
            aMapLocation.setAddress(desc.replace(MinimalPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR, ""));
        }
        aMapLocation.setCity(amapLoc.getCity());
        aMapLocation.setDistrict(amapLoc.getDistrict());
        aMapLocation.setProvince(amapLoc.getProvince());
        aMapLocation.setAoiName(amapLoc.getAoiname());
        return aMapLocation;
    }

    public static AMapLocation a(JSONObject jSONObject) {
        if (jSONObject == null) {
            return null;
        }
        AMapLocation aMapLocation = new AMapLocation("");
        String str = "";
        String str2 = "";
        String str3 = "";
        try {
            if (br.a(jSONObject, "accuracy")) {
                aMapLocation.setAccuracy(Float.parseFloat(jSONObject.getString("accuracy")));
            }
            if (br.a(jSONObject, "adCode")) {
                str = jSONObject.getString("adCode");
                aMapLocation.setAdCode(str);
            }
            if (br.a(jSONObject, "address")) {
                aMapLocation.setAddress(jSONObject.getString("address"));
            }
            if (br.a(jSONObject, "altitude")) {
                aMapLocation.setAltitude(jSONObject.getDouble("altitude"));
            }
            if (br.a(jSONObject, "bearing")) {
                aMapLocation.setBearing(Float.parseFloat(jSONObject.getString("bearing")));
            }
            if (br.a(jSONObject, DJIMultiMomentFineActivity.U)) {
                aMapLocation.setSpeed(Float.parseFloat(jSONObject.getString(DJIMultiMomentFineActivity.U)));
            }
            if (br.a(jSONObject, n.B)) {
                aMapLocation.setCity(jSONObject.getString(n.B));
            }
            if (br.a(jSONObject, "cityCode")) {
                str2 = jSONObject.getString("cityCode");
                aMapLocation.setCityCode(str2);
            }
            if (br.a(jSONObject, "country")) {
                aMapLocation.setCountry(jSONObject.getString("country"));
            }
            if (br.a(jSONObject, "district")) {
                aMapLocation.setDistrict(jSONObject.getString("district"));
            }
            if (br.a(jSONObject, "errorCode")) {
                aMapLocation.setErrorCode(jSONObject.getInt("errorCode"));
            }
            if (br.a(jSONObject, "errorInfo")) {
                aMapLocation.setErrorInfo(jSONObject.getString("errorInfo"));
            }
            if (br.a(jSONObject, "latitude")) {
                aMapLocation.setLatitude(jSONObject.getDouble("latitude"));
            }
            if (br.a(jSONObject, "locationDetail")) {
                aMapLocation.setLocationDetail(jSONObject.getString("locationDetail"));
            }
            if (br.a(jSONObject, "locationType")) {
                aMapLocation.setLocationType(jSONObject.getInt("locationType"));
            }
            if (br.a(jSONObject, "longitude")) {
                aMapLocation.setLongitude(jSONObject.getDouble("longitude"));
            }
            if (br.a(jSONObject, n.n)) {
                aMapLocation.setProvider(jSONObject.getString(n.n));
            }
            if (br.a(jSONObject, n.A)) {
                aMapLocation.setProvince(jSONObject.getString(n.A));
            }
            if (br.a(jSONObject, "road")) {
                aMapLocation.setRoad(jSONObject.getString("road"));
            }
            if (br.a(jSONObject, n.ax)) {
                aMapLocation.setTime(jSONObject.getLong(n.ax));
            }
            if (br.a(jSONObject, "poiName")) {
                aMapLocation.setPoiName(jSONObject.getString("poiName"));
            }
            if (br.a(jSONObject, "street")) {
                aMapLocation.setStreet(jSONObject.getString("street"));
            }
            if (br.a(jSONObject, "number")) {
                aMapLocation.setNumber(jSONObject.getString("number"));
            }
            if (br.a(jSONObject, "satellites")) {
                aMapLocation.setSatellites(jSONObject.getInt("satellites"));
            }
            if (br.a(jSONObject, "aoiName")) {
                aMapLocation.setAoiName(jSONObject.getString("aoiName"));
            }
            if (br.a(jSONObject, "desc")) {
                str3 = jSONObject.getString("desc");
            }
            Bundle bundle = new Bundle();
            bundle.putString("citycode", str2);
            bundle.putString("desc", str3);
            bundle.putString("adcode", str);
            aMapLocation.setExtras(bundle);
            return aMapLocation;
        } catch (Throwable th) {
            a(th, "CoreUtil", "transformLocation");
            return null;
        }
    }

    public static dc a(String str) {
        dc dcVar = null;
        try {
            dcVar = new a("loc", str, "AMAP_Location_SDK_Android 2.5.0").a(b()).a();
        } catch (Throwable th) {
            a(th, "CoreUtil", "getSDKInfo");
        }
        return dcVar;
    }

    public static String a() {
        return s;
    }

    public static void a(Context context) {
        try {
            if (br.a(b(context))) {
                s = "http://abroad.apilocate.amap.com/mobile/binary";
                return;
            }
            c();
            o = bb.a(cu.f(context));
            c(o);
        } catch (Throwable th) {
            a(th, "CoreUtil", "checkUrl");
        }
    }

    public static void a(Throwable th, String str, String str2) {
        if (!"reportError".equals(str2)) {
            try {
                th.printStackTrace();
                dj.b(th, str, str2);
            } catch (Throwable th2) {
                th2.printStackTrace();
            }
        }
    }

    public static boolean a(double d, double d2) {
        int i = (int) ((d2 - 73.0d) / 0.5d);
        int i2 = (int) ((d - 3.5d) / 0.5d);
        if (i2 < 0 || i2 >= 101 || i < 0 || i >= 124) {
            return false;
        }
        try {
            returncharAt(i + (i2 * 124)) == '1';
        } catch (Throwable th) {
            a(th, "CoreUtil", "isChina");
            return true;
        }
    }

    public static String b(Context context) {
        String str = "";
        try {
            TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService("phone");
            if (telephonyManager != null) {
                String networkOperator = telephonyManager.getNetworkOperator();
                if (networkOperator != null && networkOperator.length() >= 3) {
                    return networkOperator.substring(0, 3);
                }
            }
        } catch (Throwable th) {
            a(th, "CoreUtil", "getMcc");
        }
        return str;
    }

    public static void b(String str) {
        try {
            dj.b(a("2.5.0"), str);
        } catch (Throwable th) {
            th.printStackTrace();
        }
    }

    public static String[] b() {
        return (String[]) t.clone();
    }

    public static String c(Context context) {
        if (bq.b(context, "pref", "ded", false)) {
        }
        return u;
    }

    private static void c() {
        try {
            if (p == null) {
                p = new HashMap();
            }
            p.clear();
            p.put("a9a9d23668a1a7ea93de9b21d67e436a", "F13160D440C7D0229DA95450F66AF92154AC84DF088F8CA3100B2E8131D57F3DC67124D4C466056E7A3DFBE035E1B9A4B9DA4DB68AE65A43EDFD92F5C60EF0C9");
            p.put("fe643c382e5c3b3962141f1a2e815a78", "FB923EE67A8B4032DAA517DD8CD7A26FF7C25B0C3663F92A0B61251C4FFFA858DF169D61321C3E7919CB67DF8EFEC827");
            p.put("b2e8bd171989cb2c3c13bd89b4c1067a", "239CE372F804D4BE4EAFFD183668379BDF274440E6F246AB16BBE6F5D1D30DEACFBBF0C942485727FF12288228760A9E");
            p.put("9a571aa113ad987d626c0457828962e6", "D2FF99A88BEB04683D89470D4FA72B1749DA456AB0D0F1A476477CE5A6874F53A9106423D905F9D808C0FCE8E7F1E04AC642F01FE41D0C7D933971F45CBA72B7");
            p.put("668319f11506def6208d6afe320dfd52", "53E53D46011A6BBAEA4FAE5442E659E0577CDD336F930C28635C322FB3F51C3C63F7FBAC9EAE448DFA2E5E5D716C4807");
            p.put("256b0f26bb2a9506be6cfdb84028ae08", "AF2228680EDC323FBA035362EB7E1E38A0C33E1CF6F6FB805EE553A230CBA754CD9552EB9B546542CBE619E8293151BE");
        } catch (Throwable th) {
            a(th, "CoreUtil", "initUrlHash");
        }
    }

    private static void c(String str) {
        if (str != null) {
            try {
                if (str.length() != 0 && p != null && p.containsKey(str)) {
                    String str2 = (String) p.get(str);
                    str2 = (str2 == null || str2.length() <= 0) ? null : new String(bb.d(d(str2), str), "utf-8");
                    if (str2 != null && str2.length() > 0 && str2.contains("http:")) {
                        s = str2;
                    }
                }
            } catch (Throwable th) {
                a(th, "CoreUtil", "checkUrl");
            }
        }
    }

    private static byte[] d(String str) {
        int i = 0;
        if (str == null || str.length() < 2) {
            return new byte[0];
        }
        String toLowerCase = str.toLowerCase(Locale.US);
        int length = toLowerCase.length() / 2;
        byte[] bArr = new byte[length];
        while (i < length) {
            bArr[i] = (byte) (Integer.parseInt(toLowerCase.substring(i * 2, (i * 2) + 2), 16) & 255);
            i++;
        }
        return bArr;
    }
}
