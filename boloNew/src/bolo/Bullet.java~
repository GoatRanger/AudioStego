/* Copyright (C) 2002  USMA
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * any later version.
 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package bolo;

import java.awt.*;


class Bullet
    extends Ammunition {

    static final double APPROX_RADIUS = 14; // approximate radius of robot
    static final int BASIC_LOAD = 1000;
    static final Color COLOR = Color.black;
    static final double DAMAGE = 5;
    static final double HIT_RADIUS = 4;
    static final double MIN_RANGE = 1;
    static final double RANGE = 200;
    static final double RELOAD_DELAY = 0.3;
    static final double VELOCITY = 400;
    static final double VISIBLE_RADIUS = 1.5;
    static final Shape VISIBLE_SHAPE = Util.circle(VISIBLE_RADIUS);
    static Ammunition.Properties properties = new Ammunition.Properties(RANGE, 
                                                                        RANGE, 
                                                                        VELOCITY, 
                                                                        RELOAD_DELAY);

    // static final Shape HIT_SHAPE = Util.circle(HIT_RADIUS);
    private Bullet(double x, double y, double heading, double distance) {
        super(x + Math.cos(heading) * APPROX_RADIUS, 
              y + Math.sin(heading) * APPROX_RADIUS, heading, distance, 
              VELOCITY, HIT_RADIUS, COLOR, VISIBLE_SHAPE);
        Arena.actionQueue.add(this);
    }

    /**
     * Undocumented
     */
    void action() {
        super.action();
        Sound.play(Sound.FIRE_MISSILE);
    }

    /**
     * Undocumented
     * 
     * @param other Empty
     */
    void collideWith(Thing other) {

        if (other instanceof Robot) {
            other.damage(DAMAGE);
            new Impact(x, y);
            obsolete = true;
        }
    }

    /**
     * Undocumented
     */
    void collideWithWall() {
        new Impact(x, y);
        obsolete = true;
    }

    /**
     * Undocumented
     * 
     * @param g Empty
     */
    void draw(Graphics2D g) {
        g.setPaint(color);
        g.fill(Util.translate(VISIBLE_SHAPE, x, y));
    }

    /**
     * Undocumented
     */
    void explode() {
        obsolete = true;
    }

    static Weapon newWeapon() {

        return new Weapon(BASIC_LOAD, 
                          properties, 
                          new Bullet.Factory());
    }

    static Weapon newWeapon(Ammunition.Properties properties) {

        return new Weapon(BASIC_LOAD, 
                          properties, 
                          new Bullet.Factory());
    }

    static class Factory
        implements Ammunition.Factory {
        public void makeInstance(double x, double y, double heading, 
                                 double distance) {
            new Bullet(x, y, heading, distance);
        }
    }

    private static class Impact
        extends Transient {

        static final Color COLOR = Color.red;
        static final double DURATION = 0.2;
        static final Shape SHAPE = Util.circle(2);

        Impact(double x, double y) {
            super(DURATION);
            color = COLOR;
            shape = Util.translate(SHAPE, x, y);
            Arena.actionQueue.add(this);
        }

        void action() {
            Arena.timedThings.add(this);
            Arena.visibleThings.add(this);
        }
    }
}